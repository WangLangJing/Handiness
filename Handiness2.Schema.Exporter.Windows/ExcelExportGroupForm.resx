<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABe
        BwAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AFwABqQF9AVEB9AG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/
        AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGC
        AUsB/wGpAX0BUQH0yAABjwF0AVUB2wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFL
        Af8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wGP
        AXQBVQHbDAACMwEyAVABhgFtAVYB0AGGAW0BVgHQASsCKgFAEAACMwEyAVABhgFtAVYB0AGUAXUBVAHg
        AjMBMgFQjAABMQIwAUwBsQGAAUwB+QG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFL
        Af8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbEBgAFMAfkBMQIwAUwMAAGU
        AXUBVAHgAWsBXwFSAa8BYAFYAVABnwGGAW0BVgHQEAABlAF1AVQB4AFgAVgBUAGfAWABWAFQAZ8BhgFt
        AVYB0JAAAyIBMgFwAWIBUwG1AbEBgAFNAfsBuAGCAUsB/wFhAVkBUQGhAx8BLQMfAS0BYQFZAVEBoQG4
        AYIBSwH/AbEBgAFNAfsBcAFiAVMBtQMiATIQAAGlAXsBTgHwAWEBWQFRAaABYQFZAVEBoAGjAXoBUAHv
        EAABpQF7AU4B8AFhAVkBUQGgAWEBWQFRAaABowF6AVAB75gAAw0BEQFVAU8BSgGNAwQBBggAAwQBBgFV
        AU8BSgGNAw0BERgAATwBOwE6AWABowF6AVAB7wGjAXoBUAHvATwBOwE6AWAQAAE8ATsBOgFgAaMBegFQ
        Ae8BowF6AVAB7wE8ATsBOgFgoAABOwE6ATkBXwF/AWsBVgHJAX8BawFWAckBOwE6ATkBXyQAAXgBZgFV
        AcABeAFmAVUBwBgAAXgBZgFVAcABeAFmAVUBwKAAAyoBPwGvAX4BTQH6AbgBggFLAf8BuAGCAUsB/wGv
        AX4BTQH6AyoBPyAAAXgBZgFVAcABeAFmAVUBwBgAAXgBZgFVAcABeAFmAVUBwKAAAXwBaAFWAcMBuAGC
        AUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wF8AWgBVgHDIAABeAFmAVUBwAF4AWYBVQHAGAABeAFm
        AVUBwAF4AWYBVQHAnAADJgE5AbYBggFMAf0BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG2
        AYIBTAH9AyYBOBwAAXgBZgFVAcABeAFmAVUBwBAAATwBOwE6AWAEAAF4AWYBVQHAAXgBZgFVAcCcAAFR
        AU0BSQGIAbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AVEBTQFJ
        AYgYAAIzATIBUAGlAXsBTgHwAaUBewFOAfABPAE7AToBYAgAATwBOwE6AWABuAGCAUsB/wQAAXgBZgFV
        AcABeAFmAVUBwJwAASsCKgFAAbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4
        AYIBSwH/AisBKgFBGAABlAF1AVQB4AFrAV8BUgGvAWABWAFQAZ8BpQF7AU4B8AQAATwBOwE6AWABuAGC
        AUsB/wG4AYIBSwH/AXgBZgFVAcABpQF7AU4B8AFhAVkBUQGgnAADHQEpAbgBggFLAf8BuAGCAUsB/wG4
        AYIBSwH/AbgBggFLAf8BuAGCAUsB/wG4AYIBSwH/Ax0BKhgAAZQBdQFUAeABYQFZAVEBoAFhAVkBUQGg
        AYQBbgFWAc8EAAE8ATsBOgFgAbgBggFLAf8BuAGCAUsB/wF3AWYBVQG/AWABWAFQAZ8DIQEwnAADAwEE
        AZ0BeAFRAekBuAGCAUsB/wG4AYIBSwH/AbgBggFLAf8BuAGCAUsB/wGeAXkBUQHqAwQBBhgAATwBOwE6
        AWABlAFzAVQB3wGUAXMBVAHfAjMBMgFQCAABPAE7AToBYAG4AYIBSwH/rAADJgE4AXwBaAFVAcUBqwF+
        AU8B9QGrAX4BTwH1AYABawFVAcgDKgE/OAABPAE7AToBYP8AmQABQgFNAT4HAAE+AwABKAMAAUADAAEQ
        AwABAQEAAQEFAAGAFwAD/wEABP8EAAGAAQEC/wQAAYABAQLDBAABgAEBAsMEAAHAAQMCwwQAAfEBjwLD
        BAAB/AE/AucEAAH4AR8C5wQAAfgBHwLnBAAB8AEPAecBpwQAAfABDwHDAScEAAHwAQ8BwgEHBAAB8AEP
        AcIBBwQAAfABDwHDAT8EAAH4AR8B/wG/BAAE/wQACw==
</value>
  </data>
</root>